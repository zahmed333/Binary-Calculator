clang -c -Wall -o binarycalc.o binarycalc.c -g --std=c11 -fpic
clang -Wall -o binarycalc binarycalc.o
=== Accepts simple formula (01a) ===============================================
$ ./binarycalc 0011 + 1100
00000011 + 00001100
=== PASS (3/3) =================================================================

=== Accepts complex formula (01b) ==============================================
$ ./binarycalc ~11110000 + -10
~11110000 + 00000-10
=== PASS (3/3) =================================================================

=== Accepts max-length operands (01c) ==========================================
$ ./binarycalc 00001111 + 11110000
00001111 + 11110000
=== PASS (2/2) =================================================================

=== Checks for spaces (02a) ====================================================
$ ./binarycalc 11+ 00
Invalid binary formula
=== PASS (1/1) =================================================================

=== Checks for operation (02b) =================================================
$ ./binarycalc 101
Invalid binary formula
=== PASS (1/1) =================================================================

=== Checks for valid operation (02c) ===========================================
$ ./binarycalc 1 % 1
Invalid binary formula
=== PASS (1/1) =================================================================

=== Checks modifier placement (02d) ============================================
$ ./binarycalc 1~1 ^ 00
Invalid binary formula
=== PASS (1/1) =================================================================

=== Checks modifier count (02e) ================================================
$ ./binarycalc 11 ^ ~~00
Invalid binary formula
=== PASS (1/1) =================================================================

=== Checks operand length (02f) ================================================
$ ./binarycalc 11 + 1100110011
Invalid binary formula
=== PASS (1/1) =================================================================

=== Checks for non-binary digits (02g) =========================================
$ ./binarycalc 11 + 0b11
Invalid binary formula
=== PASS (1/1) =================================================================

=== Extends single-digit operands (03a) ========================================
$ ./binarycalc 0 + 1
00000000 + 00000001
=== PASS (2/2) =================================================================

=== Extends multi-digit operands (03b) =========================================
$ ./binarycalc 10101 + 101
00010101 + 00000101
=== PASS (2/2) =================================================================

=== Extends operands with modifiers (03c) ======================================
$ ./binarycalc 10101 + ~101
00010101 + ~0000~101
=== FAIL (0/2) =================================================================

=== Does not extend max-length operands (03d) ==================================
$ ./binarycalc 10101010 + 11111111
10101010 + 11111111
=== PASS (2/2) =================================================================

=== Extends for larger max (03e) ===============================================
clang -c -Wall -o binarycalc.o binarycalc.c -g --std=c11 -fpic
clang -Wall -o binarycalc binarycalc.o
$ ./binarycalc "1010 + 101"
00010101 + 00000101
clang -c -Wall -o binarycalc.o binarycalc.c -g --std=c11 -fpic
clang -Wall -o binarycalc binarycalc.o
=== FAIL (0/2) =================================================================

=== Output conforms to spec (M) ================================================
=== MANUAL (?/2) ===============================================================

=== Compiles without warnings (06a) ============================================
=== PASS (3/3) =================================================================

=== Multiple functions (06c) ===================================================
7 functions
=== PASS (3/3) =================================================================

=== Comments (M) ===============================================================
=== MANUAL (?/4) ===============================================================

=== Multiple git commits (06b) =================================================
14 commits
=== PASS (3/3) =================================================================

